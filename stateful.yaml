apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-node
  namespace: redis
  uid: 066aae32-7afa-4772-aafe-95ca14698a09
  resourceVersion: '12479422'
  generation: 7
  creationTimestamp: '2023-11-27T05:09:00Z'
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/instance: redis
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.3
    helm.sh/chart: redis-18.4.0
    k8slens-edit-resource-version: v1
  annotations:
    meta.helm.sh/release-name: redis
    meta.helm.sh/release-namespace: redis
  managedFields:
    - manager: node-fetch
      operation: Update
      apiVersion: apps/v1
      time: '2023-11-27T05:31:08Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:k8slens-edit-resource-version: {}
    - manager: helm
      operation: Update
      apiVersion: apps/v1
      time: '2023-11-27T05:37:14Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:persistentVolumeClaimRetentionPolicy:
            .: {}
            f:whenDeleted: {}
            f:whenScaled: {}
          f:podManagementPolicy: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:serviceName: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/configmap: {}
                f:checksum/health: {}
                f:checksum/scripts: {}
                f:checksum/secret: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"redis"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_DATA_DIR"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_MASTER_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"REDIS_MASTER_PORT_NUMBER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"REDIS_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_SENTINEL_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_SENTINEL_TLS_ENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_TLS_ENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6379,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:runAsGroup: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/health"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/redis-sentinel/etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/redis/etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/redis/mounted-etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/scripts/start-scripts"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"sentinel"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"BITNAMI_DEBUG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"REDIS_SENTINEL_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDIS_SENTINEL_TLS_ENABLED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":26379,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:runAsGroup: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/health"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/redis-sentinel/etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/redis-sentinel/mounted-etc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/bitnami/scripts/start-scripts"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:enableServiceLinks: {}
              f:initContainers:
                .: {}
                k:{"name":"volume-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"health"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"redis-tmp-conf"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"start-scripts"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:partition: {}
            f:type: {}
          f:volumeClaimTemplates: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-11-27T05:37:16Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:collisionCount: {}
          f:currentReplicas: {}
          f:currentRevision: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updateRevision: {}
          f:updatedReplicas: {}
      subresource: status
  selfLink: /apis/apps/v1/namespaces/redis/statefulsets/redis-node
status:
  observedGeneration: 7
  replicas: 1
  readyReplicas: 1
  currentReplicas: 1
  updatedReplicas: 1
  currentRevision: redis-node-5c74d57df8
  updateRevision: redis-node-5c74d57df8
  collisionCount: 0
  availableReplicas: 1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: node
      app.kubernetes.io/instance: redis
      app.kubernetes.io/name: redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: node
        app.kubernetes.io/instance: redis
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.3
        helm.sh/chart: redis-18.4.0
      annotations:
        checksum/configmap: f79abcf582f99d9657bb77fc156ee27be9b11a53ec6f54e6d8e3c0cc076e87ab
        checksum/health: 1eace71641fb5bd753e90012419e82c10b1180d694f91d83743b727a5aacca73
        checksum/scripts: 6db9dc4c1c9395f33c8e429d9e93a27f73114fb6024ad906f1fded0add8f7c64
        checksum/secret: dff5557db7be8b15cb7ea41a5ff4270286aa3ac77064bdcbfc382b22713052b6
    spec:
      volumes:
        # - name: redis-data-backup
        #   persistentVolumeClaim:
        #     claimName: redis-data-redis-master-0
        - name: start-scripts
          configMap:
            name: redis-scripts
            defaultMode: 493
        - name: health
          configMap:
            name: redis-health
            defaultMode: 493
        - name: config
          configMap:
            name: redis-configuration
            defaultMode: 420
        - name: redis-tmp-conf
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/os-shell:11-debian-11-r90
          command:
            - /bin/bash
            - '-ec'
            - |
              chown -R 1001:1001 /data
          resources: {}
          volumeMounts:
            - name: redis-data
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
      containers:
        - name: redis
          image: docker.io/redis/redis-stack-server:6.2.6-v0
          command:
            - /bin/bash
          args:
            - '-c'
            - /opt/bitnami/scripts/start-scripts/start-node.sh
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: REDIS_MASTER_PORT_NUMBER
              value: '6379'
            - name: ALLOW_EMPTY_PASSWORD
              value: 'no'
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: REDIS_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: REDIS_TLS_ENABLED
              value: 'no'
            - name: REDIS_PORT
              value: '6379'
            - name: REDIS_SENTINEL_TLS_ENABLED
              value: 'no'
            - name: REDIS_SENTINEL_PORT
              value: '26379'
            - name: REDIS_DATA_DIR
              value: /data
          resources:
            limits:
              cpu: '2'
              memory: 24Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            # - name: redis-data-backup
            #   mountPath: /data/backup
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: sentinel-data
              mountPath: /opt/bitnami/redis-sentinel/etc
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - /health/ping_liveness_local.sh 5
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - /health/ping_readiness_local.sh 3
            initialDelaySeconds: 100
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          startupProbe:
            exec:
              command:
                - sh
                - '-c'
                - /health/ping_liveness_local.sh 5
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 22
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - /opt/bitnami/scripts/start-scripts/prestop-redis.sh
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsUser: 1001
            runAsGroup: 0
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
        - name: sentinel
          image: docker.io/bitnami/redis-sentinel:7.2.3-debian-11-r0
          command:
            - /bin/bash
          args:
            - '-c'
            - /opt/bitnami/scripts/start-scripts/start-sentinel.sh
          ports:
            - name: redis-sentinel
              containerPort: 26379
              protocol: TCP
          env:
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: REDIS_SENTINEL_TLS_ENABLED
              value: 'no'
            - name: REDIS_SENTINEL_PORT
              value: '26379'
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: sentinel-data
              mountPath: /opt/bitnami/redis-sentinel/etc
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /opt/bitnami/redis-sentinel/mounted-etc
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - /health/ping_sentinel.sh 5
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - /health/ping_sentinel.sh 1
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          startupProbe:
            exec:
              command:
                - sh
                - '-c'
                - /health/ping_sentinel.sh 5
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 22
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - /opt/bitnami/scripts/start-scripts/prestop-sentinel.sh
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsUser: 1001
            runAsGroup: 0
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: redis
      serviceAccount: redis
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1001
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: application
                    operator: In
                    values:
                      - redis
                  - key: company
                    operator: In
                    values:
                      - brompton-energy
                  - key: role
                    operator: In
                    values:
                      - replica
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: role
                      operator: In
                      values:
                        - replica
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
      enableServiceLinks: true
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: redis-data
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: node
          app.kubernetes.io/instance: redis
          app.kubernetes.io/name: redis
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 150Gi
        storageClassName: gp2
        volumeMode: Filesystem
      status:
        phase: Pending
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: sentinel-data
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: node
          app.kubernetes.io/instance: redis
          app.kubernetes.io/name: redis
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 200Mi
        storageClassName: gp2
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: redis-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
