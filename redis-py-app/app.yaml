# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: redis-app-deployment
#   namespace: redis
#   labels:
#     app: redis-app
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: redis-app
#   template:
#     metadata:
#       labels:
#         app: redis-app
#     spec:
#       containers:
#       - name: redis-app-deployment
#         image: pavansa/redis-app
#         resources:
#           requests:
#             cpu: "100m"
#         imagePullPolicy: IfNotPresent
#         ports:
#         - containerPort: 26379
--- 
apiVersion: v1
# Indicates this as a service
kind: Service
metadata:
 # Service name
 name: redis-py-app-service
 namespace: redis
spec:
 selector:
   # Selector for Pods
   app: redis-py-app
 ports:
   # Port Map
 - port: 26379
   targetPort: 26379
   protocol: TCP
 type: ClusterIP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-py-app-pv
spec:
  capacity:
    storage: 8Gi  # Adjust the storage size as needed
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2
  hostPath:
    path: /data/redis-py-app-pv  # Replace with the actual path on the host
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: redis
  name: redis-py-app-pvc
  labels:
    app: redis-py-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: gp2
--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-py-app
  namespace: redis
  labels:
    app: redis-py-app #deployment label
spec:
  selector:
    matchLabels:
      app: redis-py-app # has to match .spec.template.metadata.labels
  serviceName: "redis-py"
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: redis-py-app # has to match .spec.selector.matchLabels
    spec:
      updateStrategy: rollingUpdate
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: redis-py-app-pvc
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis-python-client-app
        image: sahil2898/redis-py-code #repo/image
        ports:
        - containerPort: 26379
          name: redis-sentinel
        volumeMounts:
        - name: db
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /healthz
            port: 26379
          initialDelaySeconds: 3
          periodSeconds: 3
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: application
                    operator: In
                    values:
                      - python
                  - key: company
                    operator: In
                    values:
                      - brompton-energy
                  - key: role
                    operator: In
                    values:
                      - app

       